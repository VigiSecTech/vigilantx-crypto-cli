name: Build and Publish
on:
  push:
    tags:
      - 'v*'  # Если тег начинается с 'v', например 'v1.0', 'v2.0.1' и т. д.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v2

      # Шаг 2: Устанавливаем JDK 23 (temurin)
      - name: Set up JDK 23
        uses: actions/setup-java@v2
        with:
          java-version: '23'
          distribution: 'temurin'  # Используем temurin вместо adoptium
          
      # Шаг 3: Кешируем зависимости Maven
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Шаг 4: Собираем проект
      - name: Build with Maven
        run: mvn clean package --no-transfer-progress

      # Шаг 5: Создание релиза
      - name: Create and Publish Release
        id: create_release
        if: startsWith(github.ref, 'refs/tags/')  # Проверяем, что это пуш с тегом
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_CRYPTO_CLI }}
        with:
          tag_name: ${{ github.ref }}  # Указываем имя тега для релиза
          release_name: Release ${{ github.ref }}  # Название релиза, использующее имя тега
          draft: false  # Устанавливаем, что релиз не является черновиком
          prerelease: false  # Устанавливаем, что релиз не является предварительным

      # Шаг 6: Загружаем артефакт в релиз
      - name: Upload JAR to Release
        if: startsWith(github.ref, 'refs/tags/')  # Проверяем, что это пуш с тегом
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_CRYPTO_CLI }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/vigilantx-crypto-cli-1.0-jar-with-dependencies.jar
          asset_name: vigilantx-crypto-cli-1.0-jar-with-dependencies.jar
          asset_content_type: application/java-archive
